<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.h3c.demo</groupId>
  <artifactId>springboot-demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.7.RELEASE</version>
		<relativePath></relativePath>
	</parent>  
  
  <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <!--swagger2组件
            <springfox-swagger2.version>2.6.0</springfox-swagger2.version>
            -->
        <!--格式化mavne时间
            <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
            -->
    </properties>
  
  <!-- 依赖组件-->
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!--thymeleaf 模板引擎-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!--测试组件-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!--添加html5支持-->
        <dependency> 
            <groupId>net.sourceforge.nekohtml</groupId> 
            <artifactId>nekohtml</artifactId>
        </dependency>
        <!-- 热启动，便于开发
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-devtools</artifactId>
                <optional>true</optional>
            </dependency>
            -->
        <!--注册中心eureka组件-->
        <!--
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-eureka</artifactId>
            </dependency>
            -->
        <!-- 添加Swagger2依赖,用于生成接口文档
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${springfox-swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${springfox-swagger2.version}</version>
            </dependency>
            -->
    </dependencies>
  
  <build>
        <plugins>
            <!--打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- YUI Compressor Maven js,css压缩插件,一般不需要，可删除 -->
            <plugin>  
                <groupId>net.alchim31.maven</groupId>  
                <artifactId>yuicompressor-maven-plugin</artifactId>  
                <version>1.5.1</version>  
                <executions>  
                    <execution>   
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>compress</goal>
                        </goals> 
                    </execution>  
                </executions>  
                <configuration>  
                    <!-- 读取js,css文件采用UTF-8编码默认就是utf-8 -->
                    <encoding>UTF-8</encoding>
                    <!-- 不显示js可能的错误 -->
                    <jswarn>false</jswarn>  
                    <!-- 若存在已压缩的文件，会先对比源文件是否有改动  有改动便压缩，无改动就不压缩 -->
                    <force>true</force>  
                    <!-- 在指定的列号后插入新行   -->
                    <linebreakpos>-1</linebreakpos>  
                    <!-- 压缩之前先执行聚合文件操作  -->
                    <preProcessAggregates>true</preProcessAggregates>  
                    <!-- 压缩后保存文件后缀 无后缀 -->
                    <nosuffix>true</nosuffix>  
                    <!-- 源目录，即需压缩的根目录 -->
                    <sourceDirectory>src/main/static</sourceDirectory>
                    <outputDirectory>target/classes</outputDirectory>
                    <force>true</force>
                    <!-- 压缩js和css文件  -->
                    <includes> 
                        <include>*/js/**/*.js</include>  
                        <include>*/css/**/*.css</include>  
                    </includes>
                    <excludes>
                        <exclude>**/*.min.js</exclude>
                        <exclude>**/*-min.js</exclude>
                        <exclude>**/index/carousel.js</exclude>
                        <exclude>**/3dprint/layer/**/*.js</exclude>                
                    </excludes> 
                </configuration>  
            </plugin>
           
        </plugins>
    </build>
  
  
  
  
  
  
  
  
</project>